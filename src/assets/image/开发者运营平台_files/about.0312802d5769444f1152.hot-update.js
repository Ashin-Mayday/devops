webpackHotUpdate("about",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/views/Linkview.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader/lib??vue-loader-options!./src/views/Linkview.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.array.index-of */ \"./node_modules/core-js/modules/es.array.index-of.js\");\n/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.function.name */ \"./node_modules/core-js/modules/es.function.name.js\");\n/* harmony import */ var core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_name__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var core_js_modules_es_string_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.string.link */ \"./node_modules/core-js/modules/es.string.link.js\");\n/* harmony import */ var core_js_modules_es_string_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_link__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_Banner_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/Banner.vue */ \"./src/components/Banner.vue\");\n/* harmony import */ var _assets_css_el_input_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/assets/css/el-input.css */ \"./src/assets/css/el-input.css\");\n/* harmony import */ var _assets_css_el_input_css__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_assets_css_el_input_css__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'linkview',\n  components: {\n    Banner: _components_Banner_vue__WEBPACK_IMPORTED_MODULE_3__[\"default\"] // banner组件\n\n  },\n  data: function data() {\n    return {\n      activeName: '',\n      linkType: [],\n      // 标签主题\n      link: [],\n      // 标签内容\n      comment: [],\n      // 当前简介的内容\n      dialogFormVisible: false,\n      // dialog的展示\n      annoOptions: [],\n      // 最新的公告\n      // dialog中的内容\n      form: {\n        title: '',\n        url: '',\n        descOne: '',\n        descTwo: ''\n      },\n      formLabelWidth: '120px',\n      // 设置item的长度\n      // 保证知晓是哪个tab\n      item: '',\n      index: 1,\n      keywords: '',\n      // 关键字\n      info: {\n        // 反馈信息\n        title: '',\n        content: '',\n        contact: ''\n      },\n      infoBack: false\n    };\n  },\n  methods: {\n    // 获取link分类\n    getLinkType: function getLinkType() {\n      var $this = this;\n      this.$api.POST('./php/link/get_link_type.php').then(function (res) {\n        for (var index in res.msg) {\n          $this.linkType.push(res.msg[index]);\n        }\n\n        $this.activeName = $this.linkType[0].name;\n        $this.getLinkByType($this.linkType[0].id);\n      });\n    },\n    // 获取默认第一个link\n    getLinkByType: function getLinkByType(linkType) {\n      var $this = this;\n      this.link = []; // 保证每次进来的link数组都是最新获取的\n\n      this.comment = [];\n      this.$api.POST('./php/link/get_link.php', {\n        'linkType': linkType\n      }).then(function (res) {\n        for (var index in res.msg) {\n          // 处理comment的多种简介情况\n          $this.handleComment(index, res.msg[index].comment); // 给当前每个item添加checked状态，保证处理的都是同一个\n\n          var options = {\n            label: res.msg[index],\n            checked: false\n          };\n          $this.link.push(options);\n        }\n\n        console.log($this.link);\n      });\n    },\n    // 处理comment有多种描述情况\n    handleComment: function handleComment(index, comment) {\n      if (comment == null) {\n        this.comment.push(comment);\n      } else {\n        var strComment = JSON.stringify(comment); // 先把object转成str在操作\n\n        if (strComment.indexOf('&') !== -1) {\n          var descOne = strComment.substring(1, strComment.indexOf('&'));\n          var descTwo = strComment.substring(strComment.indexOf('&') + 1, strComment.length - 1);\n          var descArr = {\n            descOne: descOne,\n            descTwo: descTwo\n          };\n          this.comment.push(descArr);\n        } else {\n          var _descArr = {\n            comment: comment\n          }; // 保证不会被当成字符串循环\n\n          this.comment.push(_descArr);\n        }\n      }\n    },\n    // 详细跳转页面\n    query: function query(num) {\n      // 获取当前link的url\n      var url = this.link[num].label.url; // 重定向到URL\n\n      window.location.href = url;\n      var id = this.link[num].label.id;\n      this.$api.POST('./php/link/set_link_visit.php', {\n        id: id\n      }).then(function (res) {// console.log(res)\n      });\n    },\n    // 处理出现编辑的UI\n    handle: function handle(num) {\n      this.link[num].checked = true;\n    },\n    unHandle: function unHandle(num) {\n      this.link[num].checked = false;\n    },\n    // tab切换\n    handleClick: function handleClick(tab, event) {\n      this.index = parseInt(tab.index) + 1; // 保证跟linktype一致\n\n      this.getLinkByType(this.index); // 获取相关link\n    },\n    // 添加相关link\n    addLinkview: function addLinkview(item, index) {\n      this.dialogFormVisible = true;\n      this.item = item;\n      this.index = index;\n    },\n    // 删除相关item\n    deleteItem: function deleteItem(num) {\n      var _this = this;\n\n      // 通过num去获取link的id\n      var linkType = this.link[num].label.linkType;\n      var id = this.link[num].label.id;\n      var $this = this;\n      this.$confirm('是否确认删除?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        _this.$api.POST('./php/link/set_link.php', {\n          op: 'delete',\n          id: id\n        }).then(function (res) {\n          console.log(res);\n\n          if (res.code === 200) {\n            // 重新在获取一次当前link的type分类\n            $this.getLinkByType(linkType);\n          }\n        });\n      }).catch(function () {});\n    },\n    // 提交表单\n    submit: function submit() {\n      if (!(this.form.title && this.form.url)) {\n        this.$message.error('标题和URL不能为空');\n      } else {\n        // 组件一个params的json\n        var params = {\n          op: 'insert',\n          linkType: this.item.id,\n          title: this.form.title,\n          url: this.form.url,\n          comment: this.form.descOne + '&' + this.form.descTwo\n        };\n        var $this = this;\n        this.$api.POST('./php/link/set_link.php', params).then(function (res) {\n          if (res.code === 200) {\n            $this.dialogFormVisible = false;\n            $this.$message({\n              message: '提交成功',\n              type: 'success'\n            });\n            $this.getLinkByType($this.item.id);\n            $this.clearData();\n          } else {\n            $this.$message.error(res.msg + ', code:' + res.code);\n          }\n        });\n      }\n    },\n    // 提交成功，清空表单数据\n    clearData: function clearData() {\n      this.form.title = '';\n      this.form.url = '';\n      this.form.descOne = '';\n      this.form.descTwo = '';\n    },\n    // 获取公告\n    getAnno: function getAnno() {\n      var $this = this;\n      this.$api.POST('./php/anno/get_anno.php').then(function (res) {\n        if (res.code === 200) {\n          var options = {\n            id: res.msg[0].id,\n            time: res.msg[0].time,\n            content: res.msg[0].content,\n            url: res.msg[0].url\n          };\n          $this.annoOptions.push(options);\n        }\n      });\n    },\n    // 根据关键字搜索\n    search: function search() {\n      if (this.keywords) {\n        this.getLinkByKeywords(this.keywords, this.index);\n      }\n    },\n    getLinkByKeywords: function getLinkByKeywords(keywords, index) {\n      console.log(index);\n      var $this = this;\n      this.link = []; // 保证每次进来的link数组都是最新获取的\n\n      this.comment = [];\n      this.$api.POST('./php/link/get_link.php', {\n        keywords: keywords,\n        linkType: index\n      }).then(function (res) {\n        for (var _index in res.msg) {\n          // 处理comment的多种简介情况\n          $this.handleComment(_index, res.msg[_index].comment); // 给当前每个item添加checked状态，保证处理的都是同一个\n\n          var options = {\n            label: res.msg[_index],\n            checked: false\n          };\n          $this.link.push(options);\n        }\n      });\n    },\n    feedback: function feedback() {\n      if (this.infoBack) {\n        this.infoBack = false;\n      } else {\n        this.infoBack = true;\n      }\n    }\n  },\n  mounted: function mounted() {\n    // 获取link分类\n    this.getLinkType(), this.getAnno();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./src/views/Linkview.vue?vue&type=script&lang=js&\n");

/***/ })

})